/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package library;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;



/**
 *
 * @author joene
 */
public class Update extends javax.swing.JFrame {

    /**
     * Creates new form Update
     */
    public Update() {
        initComponents();
        
        
    }
    
      public Update(String data) {
    initComponents();
    
    jTextArea1.setText(data);
         jScrollPane1.setBorder(null);
        jTextArea1.setBorder(null);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jButton2 = new javax.swing.JButton();
        Update = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);

        jPanel1.setBackground(java.awt.Color.yellow);

        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jButton2.setBackground(new java.awt.Color(0, 51, 51));
        jButton2.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButton2.setForeground(java.awt.Color.white);
        jButton2.setText("Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        Update.setBackground(new java.awt.Color(0, 51, 51));
        Update.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        Update.setForeground(java.awt.Color.white);
        Update.setText("Update");
        Update.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 751, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Update)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 650, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(Update))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
      this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void UpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateActionPerformed
         String updatedDetails = jTextArea1.getText();
        
        String[] updatedFields = updatedDetails.split("\\n");
        
    String isbn = null;
    String accesionnumber = null;
    String callnumber = null;
    String title = null;
    String author = null;
    String edition = null;
    String volume = null;
    String pages = null;
    String copyright = null;
    String sourceoffund = null;
    String publisher = null;
    String placeofpublication = null;
    String classification = null;
    String librarycopies = null;
    String remarks = null;
    String id = null;

    
    for (String field : updatedFields) {
        
        if (field.contains("ISBN:")) {
            isbn = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("ACCESSION NUMBER:")) {
            accesionnumber = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("CALL NUMBER:")) {
            callnumber = field.substring(field.indexOf(":") + 1).trim();
        }
        
        
        else if (field.contains("TITLE:")) {
            title = field.substring(field.indexOf(":") + 1).trim();
        }

        
        else if (field.contains("AUTHOR:")) {
            author = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("EDITION:")) {
            edition = field.substring(field.indexOf(":") + 1).trim();
        }
        
        if (field.contains("VOLUME:")) {
            volume = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("PAGES:")) {
            pages = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("COPYRIGHT:")) {
            copyright = field.substring(field.indexOf(":") + 1).trim();
        }
        
        else if (field.contains("SOURCE OF FUND:")) {
            sourceoffund = field.substring(field.indexOf(":") + 1).trim();
        }
        
        else if (field.contains("PUBLISHER:")) {
            publisher = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("Place of Publication:")) {
            placeofpublication = field.substring(field.indexOf(":") + 1).trim();
        }
        
        if (field.contains("CLASSIFICATION:")) {
            classification = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("LIBRARY COPIES:")) {
            librarycopies = field.substring(field.indexOf(":") + 1).trim();
        } 
        
        else if (field.contains("REMARKS:")) {
            remarks = field.substring(field.indexOf(":") + 1).trim();
        }
        
        else if (field.contains("Book Register # (not Editable):")) {
            id = field.substring(field.indexOf(":") + 1).trim();
        }
        
    }
    
        String selectt = "SELECT * FROM CatalogBook WHERE id1 = ?";
        String updatee = "UPDATE CatalogBook SET isbn = ?, accesionnumber = ?, callnumber = ?, title = ?, author = ?, edition = ?, volume = ?, pages = ?, copyright = ?, sourceoffund = ?, publisher = ?, placeofpublication = ?, classification = ?, librarycopies = ?, remarks = ? WHERE id1 = ?";
          


        try (Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/TestInfo", "root", "");

            PreparedStatement update = conn.prepareStatement(updatee);
              PreparedStatement select = conn.prepareStatement(selectt)){
      
            select.setString(1, id);
         
            ResultSet rs = select.executeQuery();
            
            while (rs.next()) {
      
        update.setString(1, isbn);
        update.setString(2, accesionnumber);
        update.setString(3, callnumber);
        update.setString(4, title);
        update.setString(5, author);
        update.setString(6, edition);
        update.setString(7, volume);
        update.setString(8, pages);
        update.setString(9, copyright);
        update.setString(10, sourceoffund);
        update.setString(11, publisher);
        update.setString(12, placeofpublication);
        update.setString(13, classification);
        update.setString(14, librarycopies);
        update.setString(15, remarks);
        update.setString(16, id);

            

        int rowsUpdated = update.executeUpdate();
        
        if (rowsUpdated > 0) {
            JOptionPane.showMessageDialog(this, " updated successfully!");
            
           this.dispose();

        } 

        else {
            JOptionPane.showMessageDialog(this, "Failed to update details.", "Error", JOptionPane.ERROR_MESSAGE);
        }
         }
    } //try close
        
        catch(SQLException e) {
            
            System.out.println("Error " + e.getMessage());
            
        }
            
    }//GEN-LAST:event_UpdateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Update.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Update().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Update;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}


